{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","angular","isUndefined","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","generateId","appendToBody","spinnerEnabled","spinnerClass","backspaceReset","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","minimumInputLength","parseInt","position","toLowerCase","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","search","refresh","items","$observe","$eval","removeAttr","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_isItemDisabled","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","processed","idx","minActiveIndex","idxmin","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","getPlaceholder","initSearchValue","avoidReset","$broadcast","taggingLabel","on","enabled","animateHandler","phase","off","focusSearchInput","findGroupByName","noStrict","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","$event","type","trim","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","$on","find","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","resetDropdown","replaceWith","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","autofocus","focusOn","removeEventListener","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","calculateDropdownPosAfterAnimation","body","opacity","opened","needsCalculated","isEnabled","getElements","console","enableClick","hasClass","text","disableClick","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","$evalAsync","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","locals","$item","$model","modelMapper","_getCaretPosition","el","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.19.8 - 2017-11-30T10:01:31.386Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return angular.isUndefined(value) || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            tElement.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return isNil(ctrl.selected) || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  ctrl.getPlaceholder = function(){\n    if(ctrl.selected && ctrl.selected.length) return;\n    return ctrl.placeholder;\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (!ctrl.multiple) {\n        if (ctrl.selected && ctrl.items.length) {\n          ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n            return angular.equals(this, item);\n          }, ctrl.selected);\n        } else {\n          ctrl.activeIndex = 0;\n        }\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict)\n        return group.name == name;\n      else\n        return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items || [];\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(null);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n    } else {\n      ctrl.activate();\n    }\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.$element[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          var idx = ++ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idx]) && idx < ctrl.items.length) {\n            ctrl.activeIndex = ++idx;\n          }\n        }\n        break;\n      case KEY.UP:\n        var minActiveIndex = (ctrl.search.length === 0 && ctrl.tagging.isActivated) ? -1 : 0;\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > minActiveIndex) {\n          var idxmin = --ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idxmin]) && idxmin > minActiveIndex) {\n            ctrl.activeIndex = --idxmin;\n          }\n        }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here. Similar approach to http://stackoverflow.com/questions/12931369\n        // but using the capture phase instead of bubble phase of the event propagation.\n        //\n        // Using the capture phase avoids problems that araise when event.stopPropatagion()\n        // is called before the event reaches the `document`.\n        $window.document.addEventListener('click', onDocumentClick, true);\n\n        scope.$on('$destroy', function() {\n          $window.document.removeEventListener('click', onDocumentClick, true);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  angular.forEach(group.items, function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          angular.forEach(getElements(), function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n\n        // run following lines to set model with initial values\n        if (ngModel.$viewValue.length) {\n          ngModel.$setViewValue(Date.now());\n        }\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n\n         // run following lines to set model with initial values\n        if (angular.isDefined($select.selected)) {\n          ngModel.$setViewValue(undefined);\n          ngModel.$setViewValue($select.selected);\n        }\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><span class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul>\");\n$templateCache.put(\"bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value=\\\"\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"><span uis-transclude-append=\\\"\\\"></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span></span></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude=\\\"\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);",null,null]}